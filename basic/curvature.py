import matplotlib
import numpy as np
import matplotlib.pyplot as plt

matplotlib.use('TkAgg')

def calculate_curvature(track):
    def calculate(p1, p2, p3):
        x1, y1 = p1
        x2, y2 = p2
        x3, y3 = p3

        A = np.array([x1, y1])
        B = np.array([x2, y2])
        C = np.array([x3, y3])

        cross_product = np.linalg.norm(np.cross(B - A, C - B))

        AB = np.linalg.norm(B - A)
        BC = np.linalg.norm(C - B)

        if AB * BC == 0:
            return 0

        curvature = cross_product / (AB * BC)
        return curvature

    total_curvature = 0
    count = 0

    curvatures = []

    for i in range(1, len(track) - 1):
        p1 = track[i - 1]
        p2 = track[i]
        p3 = track[i + 1]
        curvature = calculate(p1, p2, p3)
        curvatures.append(curvature)
        total_curvature += curvature
        count += 1

    average_curvature = total_curvature / count if count > 0 else 0

    return average_curvature, curvatures

def plot_trajectory_and_curvature(track, curvatures):
    track = np.array(track)
    x, y = track[:, 0], track[:, 1]

    plt.figure(figsize=(12, 6))

    # Plot the trajectory
    plt.subplot(1, 2, 1)
    plt.plot(x, y, marker='o', linestyle='-', color='b')
    plt.title('Trajectory')
    plt.xlabel('X')
    plt.ylabel('Y')

    # Plot the curvature
    plt.subplot(1, 2, 2)
    plt.plot(range(1, len(curvatures) + 1), curvatures, marker='o', linestyle='-', color='r')
    plt.title('Curvature')
    plt.xlabel('Point Index')
    plt.ylabel('Curvature')

    plt.tight_layout()
    plt.show()

# Example usage
track = [(1183.3756103515625, 1020.7028656005859), (1223.76904296875, 1010.1488952636719), (1268.0366821289062, 996.6344604492188), (1290.60888671875, 977.5929718017578), (1322.7555541992188, 943.6442718505859), (1351.9898681640625, 890.6485443115234), (1368.2630615234375, 855.8331756591797), (1390.415283203125, 816.7381744384766), (1415.8825073242188, 778.9727172851562), (1428.8526611328125, 753.3763732910156), (1442.5036010742188, 728.3636627197266), (1457.0485229492188, 695.0772552490234), (1465.9307861328125, 674.2718353271484), (1478.2030029296875, 651.2870101928711), (1492.125732421875, 628.5), (1499.915771484375, 614.0664215087891), (1511.8313598632812, 594.2696990966797), (1523.7545776367188, 575.4372863769531), (1528.8903198242188, 564.0647201538086), (1534.846923828125, 548.9192199707031), (1540.47119140625, 533.7826538085938), (1542.732421875, 523.6769409179688), (1545.9696655273438, 510.3475036621094), (1548.1434936523438, 498.0326843261719), (1549.9385375976562, 488.27156829833984), (1549.824951171875, 479.26590728759766), (1549.4798583984375, 465.83583068847656), (1548.6298828125, 457.70066833496094), (1546.5010375976562, 448.0972137451172), (1543.8032836914062, 438.3441925048828), (1540.9464721679688, 433.0018997192383), (1536.2976684570312, 423.91896057128906), (1530.9428100585938, 416.1464385986328), (1527.2227783203125, 411.4723129272461), (1521.8302612304688, 403.63722229003906), (1516.7254638671875, 398.2880325317383), (1511.7135009765625, 395.1544647216797), (1505.0405883789062, 389.0845718383789), (1497.5912475585938, 384.3402328491211), (1492.85009765625, 378.8405532836914), (1485.6514892578125, 373.5000762939453), (1477.2056884765625, 371.3183364868164), (1471.09375, 368.67296600341797), (1462.6407470703125, 364.8522491455078), (1452.9791259765625, 360.84779357910156), (1446.4639892578125, 356.6916732788086), (1437.453369140625, 348.1034698486328), (1426.9631958007812, 343.79813385009766), (1420.7750244140625, 339.7442398071289), (1411.3058471679688, 335.2242660522461), (1401.4597778320312, 333.0975112915039), (1394.5375366210938, 330.2267532348633), (1393.8282470703125, 328.9306335449219), (1386.3856201171875, 325.60369873046875), (1383.4029541015625, 314.58020782470703), (1378.178466796875, 308.0545883178711), (1379.0773315429688, 303.4690933227539), (1380.0155639648438, 300.8922882080078), (1380.6893920898438, 296.42615127563477), (1368.5549926757812, 295.8544692993164), (1365.8104858398438, 295.93470001220703), (1363.6958618164062, 295.67980194091797), (1362.5498657226562, 295.58062744140625), (1359.9655151367188, 297.84610748291016), (1353.7002563476562, 300.0203170776367), (1371.8016357421875, 305.6717300415039), (1375.8934936523438, 315.16636657714844), (1381.0393676757812, 316.84983825683594), (1384.5149536132812, 315.14184951782227), (1387.4993286132812, 316.0354118347168), (1392.2731323242188, 316.6190490722656), (1392.4053344726562, 316.4376564025879), (1393.430419921875, 318.6925048828125)]


average_curvature, curvatures = calculate_curvature(track)
print(f'Average Curvature: {average_curvature}')
plot_trajectory_and_curvature(track, curvatures)
